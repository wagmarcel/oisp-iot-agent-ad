!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):n.sinonTest=e()}(this,function(){"use strict";function n(n){return void 0===n.createSandbox&&!!n.sandbox&&"object"==typeof n.sandbox&&"function"==typeof n.sandbox.create}function e(n,e,t){if(e){if(n.restore(),t)return;throw e}n.verifyAndRestore()}function t(n,t){return t&&c.isPromise(t)?t.then(function(t){return e(n),t},function(t){e(n,t||Error("Promise rejected with no/falsy error"))}):(e(n),t)}function o(n,o,r){if(o&&c.isPromise(o)){if(!r)return void t(n,o);e(n,Error("Your test should take a callback *or* return a promise. It should not do both."))}r||e(n)}function r(n,r){function i(n,t,o,i){(r=f(r)).injectInto=r.injectIntoThis&&n||r.injectInto;var c,s=u(r),a=t.length&&t[t.length-1];"function"==typeof a&&(t[t.length-1]=function(n){e(s,n,!0),a(n)});try{c=o.apply(n,t.concat(s.args))}catch(n){e(s,n)}return i(s,c,"function"==typeof a)}if(!c.isSinon(n))throw new TypeError("expected sinon object");var u=n.createSandbox||n.sandbox.create;return function(n){var e=typeof n;if("function"!==e)throw new TypeError("sinon.test needs to wrap a test function, got "+e);return n.length?function(e){return i(this,s.call(arguments),n,o)}:function(){return i(this,s.call(arguments),n,t)}}}function i(n,e){return a.configure(n,e)}var c={isPromise:function(n){return"object"==typeof n&&"function"==typeof n.then},isSinon:function(e){return!!e&&"object"==typeof e&&(n(e)||"function"==typeof e.createSandbox)}},u={injectIntoThis:!0,injectInto:null,properties:["spy","stub","mock","clock","server","requests"],useFakeTimers:!0,useFakeServer:!0},f=function(n){var e,t={};n=n||{};for(e in u)u.hasOwnProperty(e)&&(t[e]=n.hasOwnProperty(e)?n[e]:u[e]);return t},s=Array.prototype.slice,a={configure:r};return i.configureTest=function(n,e){return console.log("sinonTest.configureTest is deprecated and will be removed from the public API in a future version of sinon-test"),a.configure(n,e)},i});
